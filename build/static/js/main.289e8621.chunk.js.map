{"version":3,"sources":["FindEpisode.js","Post.js","Pagination.js","AllEpisodes.js","RickAndMorty.js","index.js"],"names":["FindEpisode","props","useState","name","setName","data","setData","error","setError","fetchEpisodeByName","a","axios","get","res","allRes","results","setTimeout","className","to","id","placeholder","value","onChange","event","target","setEpisodeName","onClick","episode","air_date","href","url","Post","posts","loading","map","post","key","Pagination","totalPage","paginate","pageNumbers","i","push","number","AllEpisodes","setPosts","setLoading","currentPage","setCurrentPage","next","setNext","pageCount","setPageCount","fetchEpisodes","info","pages","useEffect","currentPosts","class","pageNumber","RickAndMorty","exact","path","component","EpisodeList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.289e8621.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./style.css\"\r\n\r\nconst FindEpisode = (props) => {\r\n  const [name, setName] = useState();\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchEpisodeByName = async (name) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `https://rickandmortyapi.com/api/episode/?name=${name}`\r\n      );\r\n      setError(false);\r\n      let allRes = { ...res.data };\r\n      setData(allRes.results[0]);\r\n    } catch (error) {\r\n      setError(true);\r\n      setTimeout(() => setError(false), 4000);\r\n    }\r\n  };\r\n\r\n  const setEpisodeName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='text-monospace'>\r\n      <button className='btn btn-secondary text-justify d-flex p-2 mx-4 mt-4'>\r\n        <Link to='/' className='text text-light'>\r\n          Find The Episodes\r\n        </Link>\r\n      </button>\r\n      <h1>Rick And Morty</h1>\r\n      <input\r\n        id=\"search\"\r\n        placeholder='Enter episode name'\r\n        className='rounded border border-success col-md-6 pt-2 pb-2 pl-2 ml-2 px-4 col-lg-6 text-success'\r\n        value={name}\r\n        onChange={(event) => setEpisodeName(event)}\r\n      />\r\n      <button\r\n        className='btn btn-success mt-3 ml-2 px-4 col-md-6'\r\n        onClick={() => fetchEpisodeByName(name)}\r\n      >\r\n        FIND\r\n      </button>\r\n\r\n      {error && (\r\n        <div>\r\n          <h2 className='text-uppercase rounded mx-auto mt-5 p-3 bg-danger col-md-6'>\r\n            Enter correct name!\r\n          </h2>\r\n        </div>\r\n      )}\r\n\r\n      <div id=\"disp\" className='text-center rounded border border-info col-md-6 mx-auto mt-5 pt-2 pb-2 pl-2 ml-2 px-4 col-lg-6'>\r\n        <h5 className='card-title'>{data.name}</h5>\r\n        <h6 className='card-subtitle mb-2 text-muted'>{data.episode}</h6>\r\n        <p className='card-text mb-2'>Date of Airing : {data.air_date}</p>\r\n        <p className='card-text'>\r\n          Id : <a href={data.url}>{data.id}</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindEpisode;\r\n","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst Post = ({ posts, loading }) => {\r\n  if (loading) {\r\n    return <h2>Fetching...</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"list-group mb-3\">\r\n      {posts.map(post => (\r\n        <li key={post.id} className=\"list-group-item\">\r\n          <h4>{post.episode}</h4>\r\n          <h5>{post.name}</h5>\r\n          {post.air_date}\r\n          <p>\r\n            Episode Id : <a href={post.url}>{post.id}</a>{\" \"}\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ totalPage, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= totalPage; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className=\"page-item\">\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Post from \"./Post\";\r\nimport Pagination from \"./Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\"\r\n\r\nconst AllEpisodes = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [next, setNext] = useState(false);\r\n  const [pageCount, setPageCount] = useState(0);\r\n\r\n  const fetchEpisodes = async () => {\r\n    setLoading(true);\r\n    let number = 1;\r\n    if (next) {\r\n      number += 1;\r\n    } else {\r\n      number = 1;\r\n    }\r\n    const res = await axios.get(\r\n      `https://rickandmortyapi.com/api/episode/?page=${number}`\r\n    );\r\n\r\n    if (res.data.info.next) {\r\n      setNext(true);\r\n    } else {\r\n      setNext(false);\r\n    }\r\n    setPageCount(res.data.info.pages);\r\n    let allRes = { ...res.data };\r\n    setPosts(allRes.results);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEpisodes();\r\n  }, []);\r\n  \r\n  const currentPosts = posts;\r\n \r\n  const paginate = pageNumber => {\r\n    if (currentPage === pageNumber) {\r\n      return;\r\n    }\r\n    setCurrentPage(pageNumber);\r\n    fetchEpisodes();\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-monospace\">\r\n      <button className=\"btn btn-secondary text-justify p-3 mx-4 mt-4\">\r\n        <Link to=\"/search\" className=\"text text-light\">\r\n          To Find an Episode, enter it's name\r\n        </Link>\r\n      </button>\r\n      <div className=\"container mt-5 \">\r\n        <h1 class=\"text-main\">Rick And Morty</h1>\r\n        <h2 class=\"text-sub\">Episode List</h2>\r\n        <Post posts={currentPosts} loading={loading} />\r\n        <Pagination totalPage={pageCount} paginate={paginate} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllEpisodes;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport FindEpisode from \"../src/FindEpisode\";\r\nimport EpisodeList from \"../src/AllEpisodes\";\r\nimport \"./style.css\";\r\n\r\nexport default function RickAndMorty() {\r\n  return (\r\n    <div className=\"RickAndMorty\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={EpisodeList} />\r\n          <Route exact path=\"/search\" component={FindEpisode} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport RickAndMorty from \"./RickAndMorty\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RickAndMorty />\r\n  </React.StrictMode>,document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}